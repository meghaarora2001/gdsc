 Rotate List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode *temp = head ,*temp1=head;
    int length=1;

    while(temp->next!=NULL) length++ , temp=temp->next;
        
   int diff=length-k%(length);

    while(diff>1) temp1=temp1->next ,  diff--;

        
    temp->next=head , head=temp1->next , temp1->next=NULL;
    
    return head;
        
    }
};
