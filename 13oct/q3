https://leetcode.com/problems/binary-tree-level-order-traversal/submissions/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        vector<int> inner;
        if(!root){
            return ans;
        }
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode* curr = q.front();
            if(curr->left){
               q.push(curr->left);
            }
            if(curr->right){
                q.push(curr->right);
            }
             inner.push_back(curr->val);   
            q.pop();
            if(q.front() == NULL){
                q.pop();
                ans.push_back(inner);
                inner.clear();
                if(q.size() > 0){
                q.push(NULL);
                }   
            }
        }
        return ans;
        
    }
};
